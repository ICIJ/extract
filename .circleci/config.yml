version: 2
jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0
      - image: redis:4.0.1-alpine
        name: redis

    working_directory: ~/repo

    environment:
      MAVEN_OPTS: -Xmx3200m

    dependencies:
      override:

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install leptonica and tesseract-ocr
          command: |
            sudo apt-get install apt-transport-https
            wget https://github.com/DanBloomberg/leptonica/releases/download/1.85.0/leptonica-1.85.0.tar.gz
            tar zxvf leptonica-1.85.0.tar.gz
            cd leptonica-1.85.0
            ./configure
            make
            sudo make install
            echo "deb https://notesalexp.org/tesseract-ocr5/$(lsb_release -cs)/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/notesalexp.list > /dev/null
            wget -O - https://notesalexp.org/debian/alexp_key.asc | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install -y libtesseract5 tesseract-ocr tesseract-ocr-eng libpng-dev libjpeg-dev libtiff5-dev libwebp-dev libopenjp2-7-dev libgif-dev

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH mvn test

  release:
    docker:
      - image: cimg/openjdk:17.0

    environment:
      MAVEN_OPTS: "-Xms512m -Xmx512m -Xss10M"
      GPG_TTY: ${tty} # for Inappropriate ioctl for device

    steps:
      - checkout
      - run:
          name: Configure GPG private key for signing project artifacts in OSS Sonatype
          command: |
            echo ${RELEASES_GPG_PRIV_BASE64} | base64 --decode | gpg --batch --no-tty --import --yes
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: deploy extract jars to maven central
          command: mvn -s .circleci/maven-release-settings.xml deploy -Dmaven.test.skip=true
          no_output_timeout: 30m

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}


workflows:
  version: 2
  build_workflow:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - build
          filters:
            tags:
              only: /^[0-9.]*/
            branches:
              ignore: /.*/
